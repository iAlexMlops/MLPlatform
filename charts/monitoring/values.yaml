victoria-metrics-k8s-stack:
  nameOverride: ""
  fullnameOverride: "vms"

  victoria-metrics-operator:
    enabled: true
    cleanupCRD: false

  vmsingle:
    enabled: false

  vmcluster:
    enabled: true
    spec:
      retentionPeriod: "3"
      replicationFactor: 2
      vmstorage:
        replicaCount: 2
        storageDataPath: "/vm-data"
      vmselect:
        replicaCount: 2
        cacheMountPath: "/select-cache"
      vminsert:
        replicaCount: 2

  alertmanager:
    enabled: true

  vmagent:
    enabled: true
    spec:
      selectAllByDefault: true
      scrapeInterval: 20s
      inlineScrapeConfig: |
        - job_name: argocd-server-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-server-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics
        
        - job_name: argocd-repo-server-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-repo-server-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics
        
        - job_name: argocd-applicationset-controller-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-applicationset-controller-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics
        
        - job_name: argocd-application-controller-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-application-controller-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics

  kubeScheduler:
    enabled: true

  kubeEtcd:
    enabled: false

  defaultDashboardsEnabled: false
  grafana:
    enabled: true

    grafana.ini:
      server:
        domain: grafana.alex.localhost
        root_url: http://grafana.alex.localhost
        serve_from_sub_path: true

    ingress:
      enabled: true
      hosts:
        - grafana.alex.localhost

#    dashboardProviders:
#      dashboardproviders.yaml:
#        apiVersion: 1
#        providers:
#          - name: 'default'
#            orgId: 1
#            folder: ''
#            type: file
#            disableDeletion: false
#            editable: true
#            options:
#              path: /var/lib/grafana/dashboards/default

    dashboardsConfigMaps:
      test: "test-dash"

    adminUser: admin
    adminPassword: strongpassword

    persistence:
      type: pvc
      enabled: true
      accessModes:
        - ReadWriteMany
      size: 3Gi

    defaultDashboardsTimezone: "Europe/Moscow"
    defaultDatasourceType: "prometheus"

  prometheus-node-exporter:
    enabled: false

  kube-state-metrics:
    enabled: true

  kubeControllerManager:
    enabled: true