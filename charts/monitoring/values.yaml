victoria-metrics-k8s-stack:
  nameOverride: ""
  fullnameOverride: "vms"

  victoria-metrics-operator:
    enabled: true
    cleanupCRD: false

  vmsingle:
    enabled: false

  vmcluster:
    enabled: true
    spec:
      retentionPeriod: "3"
      replicationFactor: 2
      vmstorage:
        replicaCount: 2
        storageDataPath: "/vm-data"
      vmselect:
        replicaCount: 2
        cacheMountPath: "/select-cache"
      vminsert:
        replicaCount: 2

  alertmanager:
    enabled: true

  vmagent:
    enabled: true
    spec:
      selectAllByDefault: true
      scrapeInterval: 20s
      inlineScrapeConfig: |
        - job_name: argocd-server-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-server-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics
        
        - job_name: argocd-repo-server-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-repo-server-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics
        
        - job_name: argocd-applicationset-controller-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-applicationset-controller-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics
        
        - job_name: argocd-application-controller-metrics
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_name]
              action: keep
              regex: argocd-application-controller-metrics
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              action: keep
              regex: http-metrics
          scheme: http
          metrics_path: /metrics

  kubeScheduler:
    enabled: true

  kubeEtcd:
    enabled: false

  defaultDashboardsEnabled: false
  grafana:
    grafana.ini:
      grafana_net:
        url: http://grafana.alex.localhost
    enabled: true
    ingress:
      enabled: true
      hosts:
        - grafana.alex.localhost
    dashboards:
      default:
        some-dashboard:
          json: |
            {{ .Files.Get "dashboards/test.json" | toJson }}
        custom-dashboard:
          file: dashboards/test.json
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
    persistence:
      type: pvc
      enabled: true
      accessModes:
        - ReadWriteMany
      size: 10Gi
    sidecar:
      datasources:
        enabled: true
        initDatasources: true
        createVMReplicasDatasources: false
        jsonData: {}
      dashboards:
        enabled: false
        multicluster: false

    defaultDashboardsTimezone: "Europe/Moscow"
    defaultDatasourceType: "prometheus"

  prometheus-node-exporter:
    enabled: false

  kube-state-metrics:
    enabled: true

  kubeControllerManager:
    enabled: true